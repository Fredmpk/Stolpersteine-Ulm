import type { Metadata } from "next";
import "./globals.css";
import { Fira_Sans } from "next/font/google";
import { VisualEditing } from "next-sanity/visual-editing";
import { DisableDraftMode } from "@/components/DisableDraftMode";
import { draftMode } from "next/headers";
import { sanityFetch, SanityLive } from "@/sanity/lib/live";
import { Sidebar } from "./components/sidebar";
import { Header } from "./components/header";
import Image from "next/image";
import { BACKGROUNDS_QUERY } from "@/sanity/lib/queries";
import { BACKGROUNDS_QUERYResult } from "@/sanity/types";
import { BurgerMenu } from "./components/burger-menu";

export const metadata: Metadata = {
  title: "Stolpersteine",
  description: "Generated by create next app",
};

const firaSans = Fira_Sans({
  subsets: ["latin"], // add more if needed
  weight: ["300", "400", "500", "600", "700"], // practical range
  style: ["normal", "italic"], // include italics if you use them
  display: "swap", // industry best practice
});

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { data: backgrounds } = (await sanityFetch({
    query: BACKGROUNDS_QUERY,
  })) as {
    data: BACKGROUNDS_QUERYResult;
  };

  {
    return (
      <html lang="en">
        <body
          className={`${firaSans.className} w-5/6 mx-auto min-h-screen flex flex-col`}
        >
          <div className=" pt-4">
            <Header />
          </div>
          <div className="sm:hidden">
            <BurgerMenu backgrounds={backgrounds} />
          </div>
          <div className="flex-row flex">
            <Sidebar backgrounds={backgrounds} />
            <main>{children}</main>
          </div>
          <footer className="relative w-full h-8 sm:h-12 md:h-14 lg:h-16 xl:h-20 mt-auto">
            <Image
              src="/footer_stolpersteine.png"
              alt="Footer"
              fill
              className="object-contain object-center"
            />
          </footer>
          <SanityLive />
          {(await draftMode()).isEnabled && (
            <>
              <VisualEditing />
              <DisableDraftMode />
            </>
          )}
        </body>
      </html>
    );
  }
}
